#include <stdio.h>

int main()
{
	int n=0;
	int i;
	int m=0;



	while(n<4)										// 1. 우선 조건 검사를 한다
	{
		printf("%d번째 while문 출력 \n", n+1);		// 2. 블록 실행 3. 증감식을 실행한다.
		n++;
	}



	for(i=0; i<4; i++)								// 1. 우선 초기화식(i=0;) 을 실행한다 2. 조건 검사를 한다
		printf("%d번째 for문 출력 \n" , i+1);		// 3. 블록 샐행	4. 반복문 탈출을 위한 연산식(증감식)을 실행한다.



	do
	{
		printf("%d번째 do~while문 출력 \n" , m+1);	// 1. 블록실행.
		m++;										// 2. 증감식 실행
	}while(m<4);									// 3. 조건 검사

}

/* 

우선 가장 두드러지는 특징은 while문과 for문의 조건식은 블록 이전에 있지만 do~while문의 조건식은 블록 실행 후에 있다.

먼저 실행후 조건을 검사 함으로써 조건 검사를 뒤에서 하는 것이 합리적인 상황 (값을 입력받고 그 값으로 조건문을 실행한다던가)에서만 쓰는 것이 좋다.

while문과 for문의 차이점은 우선 while문은 탈출에 필요한 변수를 식 밖에서 초기화해 줘야 함에 반면 for문은 식 내에서 변수를 선언하고 활용할 수 있다.

또한 for문은 초기화식, 조건식, 증감식이 한줄에 들어감으로써 훨씬 간결해 지고 분석하기도 쉽다.

※ 조건식 : 탈출을 위한 조건
   증감식 : 탈출조건 성립을 위한 증가연산
   초기화식 : 변수를 선언하는 식


*/